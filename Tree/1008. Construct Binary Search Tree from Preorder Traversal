/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode root = new TreeNode(preorder[0]);
        
        for(int i = 1; i<preorder.length; i++){
            insert(root, preorder[i]);
        }
        
        return root;
        
        
    }
    
    public TreeNode insert(TreeNode current, int data){
        
        if(current == null) return new TreeNode(data);
        
        if(data < current.val)
            current.left = insert(current.left, data);
        else 
            current.right = insert(current.right, data);
        
        return current;
        
        
    }
    
    
}
