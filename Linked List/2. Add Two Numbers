/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(0);
        ListNode result = head;
        int carry = 0, val1, val2, sum = 0;
 
        // while(result != null){
        while(l1 != null || l2!= null){

            if(l1 == null)
                val1 = 0;
            else
                val1 = l1.val;
            
            if(l2 == null)
                val2 = 0;
            else
                val2 = l2.val;
            
            sum = carry + val1 + val2;
            carry = sum / 10;
            //result.val = sum % 10;
            result.next = new ListNode(sum%10);
            result = result.next;
            
            if(l1 != null)
                l1 = l1.next;
            
            if(l2 != null)
                l2 = l2.next;
            
           
            // //  result = result.next;
            // if(l1 == null){
            //     result.next = l2;
            // }
            // else if(l2 == null)
            //     result.next = l1;
        }
        
        if(carry != 0){
            result.next = new ListNode(carry);
        }
        
        
        
        return head.next;
    }
}
