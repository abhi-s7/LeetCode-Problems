/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
         
        //this is to take care if first elements are equal to val
        while(head!=null && head.val == val){
            head = head.next;
        }
        
        if(head == null || head.next == null){
            return head;
        }
        
        ListNode slow = head;
        ListNode fast = head.next;
        
        while(fast != null){
            if(fast.val == val){
                fast = fast.next;
            }
            else{
                slow.next = fast;
                fast = fast.next;
                slow = slow.next;
            }
        }
        
        if(slow != null){
            slow.next = null;
        }
      
        return head;
    }
}
